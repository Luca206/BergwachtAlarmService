name: Build & Publish .NET App

on:
  push:
    branches:
      - main
      - develop

env:
  SOLUTION_PATH: src/BergwachtDashboardMonitor.sln
  WORKER_PROJECT: src/AlarmService/AlarmService.csproj
  DOTNET_VERSION: 9.0.x

jobs:
  test-and-publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Run Unit Tests
        run: dotnet test ${{ env.SOLUTION_PATH }} --verbosity normal

      - name: Publish for Linux
        run: dotnet publish ${{ env.WORKER_PROJECT }} -c Release -r linux-x64 --self-contained true /p:PublishSingleFile=true -o ./publish/linux

      - name: Publish for Windows
        run: dotnet publish ${{ env.WORKER_PROJECT }} -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true -o ./publish/windows

      - name: Prepare assets (rename + exclude .pdb)
        run: |
          rename_files() {
            platform=$1
            for file in ./publish/$platform/*; do
              filename="$(basename -- "$file")"

              # Skip .pdb files
              if [[ "$filename" == *.pdb ]]; then
                echo "Removing debug file: $file"
                rm "$file"
                continue
              fi

              # Determine extension
              if [[ "$filename" == *.* ]]; then
                base="${filename%.*}"
                ext="${filename##*.}"
                newname="${base}-${platform}.${ext}"
              else
                newname="${filename}-${platform}"
              fi

              echo "Renaming $file -> ./publish/$platform/$newname"
              mv "$file" "./publish/$platform/$newname"
            done
          }

          rename_files linux
          rename_files windows

      - name: Get Version from commit
        id: get_version
        run: |
          VERSION=$(date +'%Y%m%d%H%M')-$(git rev-parse --short HEAD)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: "Release ${{ steps.get_version.outputs.version }}"
          files: |
            ./publish/linux/*
            ./publish/windows/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  test-and-build-develop:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Run Unit Tests
        run: dotnet test ${{ env.SOLUTION_PATH }} --verbosity normal

      - name: Publish Check (non-self-contained)
        run: dotnet publish ${{ env.WORKER_PROJECT }} -c Release -r linux-x64 --self-contained false -o ./publish/dev-linux
